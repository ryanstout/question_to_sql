name: Python
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request: {}

permissions:
  actions: write
  contents: read

env:
  TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
  PYTHON_ENV: test
  PRISMA_EXPECTED_ENGINE_VERSION: aead147aa326ccb985dcfed5b065b4fdabd44b19
  OPENAI_KEY: sk-ca4240cf-ca50-4b16-8eaa-742a68473ff8
  PYTHONPATH: ${{ github.workspace }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  # TODO why can't we define runs-on this for the entire workflow?
  lint:
    name: PyLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/python-setup

      - name: lint
        run: poetry run pylint **/*.py

  formatting:
    name: Black Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/python-setup
      - name: code formatting
        shell: bash
        continue-on-error: true
        run: |
          black --version
          black --check .
      - name: import sorting
        shell: bash
        run: isort **/*.py -c -v

  typecheck:
    name: pyright
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/python-setup

      - name: ðŸ”Ž Type check
        run: poetry run npx pyright

  pytest:
    name: Pytest
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/python-setup
      - run: DATABASE_URL=$TEST_DATABASE_URL npx prisma migrate reset --force

      - name: âš¡ Run Pytest
        run: poetry run pytest
