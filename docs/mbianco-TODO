- [ ] snowflake async stack trace fix https://github.com/hightouchio/snowflake-connector-nodejs/blob/e059b8cb897891a12e30b078faa327bd2282f2f5/lib/http/base.js#L98

# UI

- [ ] remove name from signup form

# Data model

- [ ] https://www.npmjs.com/package/prisma-erd-generator

# Packages

- [ ] logging
  - [ ] Structured logging when an object is passed as a second argument
  - [ ] maybe better logging package https://github.com/pimterry/loglevel/issues/170
  - [ ] extract LOG_LEVEL as a plugin https://github.com/vectrlabs/loglevel-debug/blob/master/index.js
  - [ ] colorized log output? https://github.com/kentcdodds/loglevel-colored-level-**prefix**

# Docker

- [ ] we should not have to add prop-type to the package, but without it nivo is failing
- [ ] can we only deploy the git version, not the local?
- [ ] should add sentry versioning https://docs.sentry.io/platforms/javascript/guides/remix/sourcemaps/

# Devprod

- [ ] shell formatting
- [ ] Maybe use trunk?
- [ ] sync line size across everything https://github.com/ryanstout/nlpquery/commit/56872f3eaca35722b4398a47c7e3dd2367d7ee11#r100412156

# Open Source

- [ ] add 0 to node docs https://github.com/nodejs/node/issues/28457

# Remix

- [ ] https://github.com/kiliman/rmx-cli
- [ ] https://github.com/yesmeck/remix-routes
- [ ] array in zod https://discord.com/channels/893487829802418277/893488038477434881/1074757486470516836

# Javascript Lang

- [ ] force const use https://eslint.org/docs/latest/rules/prefer-const#resources
- [ ] https://www.npmjs.com/package/sort-package-json
- [ ] https://github.com/trivago/prettier-plugin-sort-imports/issues/112 is broken and does not support ignores should use https://www.npmjs.com/package/prettier-plugin-organize-imports?activeTab=versions instead.
- [ ] npm alternative? https://pnpm.io/installation

# Javascript Packages

- `export default this` in index on ramda

# Github actions

- [ ] integrate code coverage into CI, use c8's formatting to do this
- [ ] https://github.com/actions/setup-node/issues/531 looks like we could use corepack to setup specific versions
- [ ] how do the PR annotations work? Can we get pylint working like tsc? https://github.com/marketplace/actions/pylint-pr-annotator
- [ ] https://github.com/tj-actions/depcheck/blob/main/entrypoint.sh needs to not pass the ignore flag if nothing is set

# Python Lang

- [ ] functional https://github.com/EntilZha/PyFunctional
- [ ] another runtime type checking option https://docs.pydantic.dev
- [ ] typeguard for runtime type checking https://github.com/agronholm/typeguard
- [ ] automatically remove unused imports https://github.com/PyCQA/isort/issues/1105

---

questions = all_questions_marked_as_correct

for question in questions:
result = rerun_request(question.userSql)

# compare values in result

assert_results_match_without_while_being_column_agnostic(
result,
question.resultdata
)
